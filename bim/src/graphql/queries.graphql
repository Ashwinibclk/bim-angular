# this is an auto generated file. This will be overwritten
query GetTableaulogin($id: ID!) {
  getTableaulogin(id: $id) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTableaulogins(
  $filter: ModelTableauloginFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableaulogins(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      username
      password
      sitename
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTableaulogins(
  $filter: ModelTableauloginFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableaulogins(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      username
      password
      sitename
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetQuicksightlogin($id: ID!) {
  getQuicksightlogin(id: $id) {
    id
    awsaccountId
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListQuicksightlogins(
  $filter: ModelQuicksightloginFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksightlogins(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      awsaccountId
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncQuicksightlogins(
  $filter: ModelQuicksightloginFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksightlogins(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      awsaccountId
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCustomer($id: ID!) {
  getCustomer(id: $id) {
    id
    name
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListCustomers(
  $filter: ModelCustomerFilterInput
  $limit: Int
  $nextToken: String
) {
  listCustomers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      name
      Did
      department {
        id
        DName
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncCustomers(
  $filter: ModelCustomerFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCustomers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      name
      Did
      department {
        id
        DName
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDepartment($id: ID!) {
  getDepartment(id: $id) {
    id
    DName
    customers {
      items {
        id
        name
        Did
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDepartments(
  $filter: ModelDepartmentFilterInput
  $limit: Int
  $nextToken: String
) {
  listDepartments(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDepartments(
  $filter: ModelDepartmentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDepartments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetBIMProject($id: ID!) {
  getBIMProject(id: $id) {
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    migrationid
    name
    source
    destination
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListBIMProjects(
  $filter: ModelBIMProjectFilterInput
  $limit: Int
  $nextToken: String
) {
  listBIMProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      Did
      department {
        id
        DName
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      migrationid
      name
      source
      destination
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncBIMProjects(
  $filter: ModelBIMProjectFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBIMProjects(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      Did
      department {
        id
        DName
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      migrationid
      name
      source
      destination
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDataset($id: ID!) {
  getDataset(id: $id) {
    datasetid
    name
    datasources {
      items {
        dsid
        name
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
    }
    Files {
      items {
        name
        url
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDatasets(
  $filter: ModelDatasetFilterInput
  $limit: Int
  $nextToken: String
) {
  listDatasets(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDatasets(
  $filter: ModelDatasetFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDatasets(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFile($id: ID!) {
  getFile(id: $id) {
    name
    url
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFiles(
  $filter: ModelFileFilterInput
  $limit: Int
  $nextToken: String
) {
  listFiles(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      url
      datasetid
      datasets {
        datasetid
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFiles(
  $filter: ModelFileFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFiles(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      url
      datasetid
      datasets {
        datasetid
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDatasources($id: ID!) {
  getDatasources(id: $id) {
    dsid
    name
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDatasources(
  $filter: ModelDatasourcesFilterInput
  $limit: Int
  $nextToken: String
) {
  listDatasources(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      dsid
      name
      datasetid
      datasets {
        datasetid
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDatasources(
  $filter: ModelDatasourcesFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDatasources(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      dsid
      name
      datasetid
      datasets {
        datasetid
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
