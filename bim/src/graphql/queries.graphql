# this is an auto generated file. This will be overwritten
query GetTableaulogin($id: ID!) {
  getTableaulogin(id: $id) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTableaulogins(
  $filter: ModelTableauloginFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableaulogins(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      username
      password
      sitename
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTableaulogins(
  $filter: ModelTableauloginFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableaulogins(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      username
      password
      sitename
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetQuicksightlogin($id: ID!) {
  getQuicksightlogin(id: $id) {
    id
    awsaccountId
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListQuicksightlogins(
  $filter: ModelQuicksightloginFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksightlogins(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      id
      awsaccountId
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncQuicksightlogins(
  $filter: ModelQuicksightloginFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksightlogins(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      id
      awsaccountId
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetCustomer($id: ID!) {
  getCustomer(id: $id) {
    CustomerId
    name
    Did {
      Did
      CustomerId {
        CustomerId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        customerDidId
      }
      Dname
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      departmentCustomerIdId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    customerDidId
  }
}
query ListCustomers(
  $filter: ModelCustomerFilterInput
  $limit: Int
  $nextToken: String
) {
  listCustomers(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      CustomerId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      customerDidId
    }
    nextToken
    startedAt
  }
}
query SyncCustomers(
  $filter: ModelCustomerFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncCustomers(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      CustomerId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      customerDidId
    }
    nextToken
    startedAt
  }
}
query GetDepartment($id: ID!) {
  getDepartment(id: $id) {
    Did
    CustomerId {
      CustomerId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      customerDidId
    }
    Dname
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    departmentCustomerIdId
  }
}
query ListDepartments(
  $filter: ModelDepartmentFilterInput
  $limit: Int
  $nextToken: String
) {
  listDepartments(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      Did
      CustomerId {
        CustomerId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        customerDidId
      }
      Dname
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      departmentCustomerIdId
    }
    nextToken
    startedAt
  }
}
query SyncDepartments(
  $filter: ModelDepartmentFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDepartments(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      Did
      CustomerId {
        CustomerId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        customerDidId
      }
      Dname
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      departmentCustomerIdId
    }
    nextToken
    startedAt
  }
}
query GetTableauProject($id: ID!) {
  getTableauProject(id: $id) {
    TProId
    name
    Did {
      Did
      CustomerId {
        CustomerId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        customerDidId
      }
      Dname
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      departmentCustomerIdId
    }
    envname {
      name
      TProId {
        TProId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectDidId
        tableauProjectEnvnameId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauEnvTProIdId
    }
    WbId {
      items {
        WbId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectWbIdId
      }
      nextToken
      startedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    tableauProjectDidId
    tableauProjectEnvnameId
  }
}
query ListTableauProjects(
  $filter: ModelTableauProjectFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableauProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      TProId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      envname {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauEnvTProIdId
      }
      WbId {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectDidId
      tableauProjectEnvnameId
    }
    nextToken
    startedAt
  }
}
query SyncTableauProjects(
  $filter: ModelTableauProjectFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableauProjects(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      TProId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      envname {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauEnvTProIdId
      }
      WbId {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectDidId
      tableauProjectEnvnameId
    }
    nextToken
    startedAt
  }
}
query GetTableauWorkbook($id: ID!) {
  getTableauWorkbook(id: $id) {
    WbId
    name
    TProId {
      TProId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      envname {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauEnvTProIdId
      }
      WbId {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectDidId
      tableauProjectEnvnameId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    tableauProjectWbIdId
  }
}
query ListTableauWorkbooks(
  $filter: ModelTableauWorkbookFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableauWorkbooks(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      WbId
      name
      TProId {
        TProId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectDidId
        tableauProjectEnvnameId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectWbIdId
    }
    nextToken
    startedAt
  }
}
query SyncTableauWorkbooks(
  $filter: ModelTableauWorkbookFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableauWorkbooks(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      WbId
      name
      TProId {
        TProId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectDidId
        tableauProjectEnvnameId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectWbIdId
    }
    nextToken
    startedAt
  }
}
query GetTableauSheet($id: ID!) {
  getTableauSheet(id: $id) {
    name
    WbId {
      WbId
      name
      TProId {
        TProId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectDidId
        tableauProjectEnvnameId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectWbIdId
    }
    Tsid
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    tableauSheetWbIdId
  }
}
query ListTableauSheets(
  $filter: ModelTableauSheetFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableauSheets(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      WbId {
        WbId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectWbIdId
      }
      Tsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauSheetWbIdId
    }
    nextToken
    startedAt
  }
}
query SyncTableauSheets(
  $filter: ModelTableauSheetFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableauSheets(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      WbId {
        WbId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectWbIdId
      }
      Tsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauSheetWbIdId
    }
    nextToken
    startedAt
  }
}
query GetTableauGraph($id: ID!) {
  getTableauGraph(id: $id) {
    name
    Tsid {
      name
      WbId {
        WbId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectWbIdId
      }
      Tsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauSheetWbIdId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    tableauGraphTsidId
  }
}
query ListTableauGraphs(
  $filter: ModelTableauGraphFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableauGraphs(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      Tsid {
        name
        Tsid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauSheetWbIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauGraphTsidId
    }
    nextToken
    startedAt
  }
}
query SyncTableauGraphs(
  $filter: ModelTableauGraphFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableauGraphs(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      Tsid {
        name
        Tsid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauSheetWbIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauGraphTsidId
    }
    nextToken
    startedAt
  }
}
query GetTableauEnv($id: ID!) {
  getTableauEnv(id: $id) {
    name
    TProId {
      TProId
      name
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      envname {
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauEnvTProIdId
      }
      WbId {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauProjectDidId
      tableauProjectEnvnameId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    tableauEnvTProIdId
  }
}
query ListTableauEnvs(
  $filter: ModelTableauEnvFilterInput
  $limit: Int
  $nextToken: String
) {
  listTableauEnvs(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      TProId {
        TProId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectDidId
        tableauProjectEnvnameId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauEnvTProIdId
    }
    nextToken
    startedAt
  }
}
query SyncTableauEnvs(
  $filter: ModelTableauEnvFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTableauEnvs(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      TProId {
        TProId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        tableauProjectDidId
        tableauProjectEnvnameId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      tableauEnvTProIdId
    }
    nextToken
    startedAt
  }
}
query GetQuicksiteProject($id: ID!) {
  getQuicksiteProject(id: $id) {
    name
    QProId
    Did {
      Did
      CustomerId {
        CustomerId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        customerDidId
      }
      Dname
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      departmentCustomerIdId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    quicksiteProjectDidId
  }
}
query ListQuicksiteProjects(
  $filter: ModelQuicksiteProjectFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksiteProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      QProId
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteProjectDidId
    }
    nextToken
    startedAt
  }
}
query SyncQuicksiteProjects(
  $filter: ModelQuicksiteProjectFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksiteProjects(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      QProId
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteProjectDidId
    }
    nextToken
    startedAt
  }
}
query GetQuicksiteTemplate($id: ID!) {
  getQuicksiteTemplate(id: $id) {
    QtemId
    name
    analysisId {
      name
      analysisId
      QtemId {
        QtemId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteTemplateAnalysisIdId
        quicksiteTemplateQProIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteAnalysisQtemIdId
    }
    QProId {
      name
      QProId
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteProjectDidId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    quicksiteTemplateAnalysisIdId
    quicksiteTemplateQProIdId
  }
}
query ListQuicksiteTemplates(
  $filter: ModelQuicksiteTemplateFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksiteTemplates(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      QtemId
      name
      analysisId {
        name
        analysisId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteAnalysisQtemIdId
      }
      QProId {
        name
        QProId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteProjectDidId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteTemplateAnalysisIdId
      quicksiteTemplateQProIdId
    }
    nextToken
    startedAt
  }
}
query SyncQuicksiteTemplates(
  $filter: ModelQuicksiteTemplateFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksiteTemplates(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      QtemId
      name
      analysisId {
        name
        analysisId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteAnalysisQtemIdId
      }
      QProId {
        name
        QProId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteProjectDidId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteTemplateAnalysisIdId
      quicksiteTemplateQProIdId
    }
    nextToken
    startedAt
  }
}
query GetQuicksiteAnalysis($id: ID!) {
  getQuicksiteAnalysis(id: $id) {
    name
    analysisId
    QtemId {
      QtemId
      name
      analysisId {
        name
        analysisId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteAnalysisQtemIdId
      }
      QProId {
        name
        QProId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteProjectDidId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteTemplateAnalysisIdId
      quicksiteTemplateQProIdId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    quicksiteAnalysisQtemIdId
  }
}
query ListQuicksiteAnalyses(
  $filter: ModelQuicksiteAnalysisFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksiteAnalyses(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      analysisId
      QtemId {
        QtemId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteTemplateAnalysisIdId
        quicksiteTemplateQProIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteAnalysisQtemIdId
    }
    nextToken
    startedAt
  }
}
query SyncQuicksiteAnalyses(
  $filter: ModelQuicksiteAnalysisFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksiteAnalyses(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      analysisId
      QtemId {
        QtemId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteTemplateAnalysisIdId
        quicksiteTemplateQProIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteAnalysisQtemIdId
    }
    nextToken
    startedAt
  }
}
query GetQuicksiteDashboard($id: ID!) {
  getQuicksiteDashboard(id: $id) {
    name
    QtemId {
      QtemId
      name
      analysisId {
        name
        analysisId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteAnalysisQtemIdId
      }
      QProId {
        name
        QProId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteProjectDidId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteTemplateAnalysisIdId
      quicksiteTemplateQProIdId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    quicksiteDashboardQtemIdId
  }
}
query ListQuicksiteDashboards(
  $filter: ModelQuicksiteDashboardFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksiteDashboards(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
  ) {
    items {
      name
      QtemId {
        QtemId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteTemplateAnalysisIdId
        quicksiteTemplateQProIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteDashboardQtemIdId
    }
    nextToken
    startedAt
  }
}
query SyncQuicksiteDashboards(
  $filter: ModelQuicksiteDashboardFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksiteDashboards(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      QtemId {
        QtemId
        name
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteTemplateAnalysisIdId
        quicksiteTemplateQProIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteDashboardQtemIdId
    }
    nextToken
    startedAt
  }
}
query GetQuicksiteEnv($id: ID!) {
  getQuicksiteEnv(id: $id) {
    name
    QProId {
      name
      QProId
      Did {
        Did
        Dname
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        departmentCustomerIdId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteProjectDidId
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
    quicksiteEnvQProIdId
  }
}
query ListQuicksiteEnvs(
  $filter: ModelQuicksiteEnvFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksiteEnvs(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      QProId {
        name
        QProId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteProjectDidId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteEnvQProIdId
    }
    nextToken
    startedAt
  }
}
query SyncQuicksiteEnvs(
  $filter: ModelQuicksiteEnvFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksiteEnvs(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      QProId {
        name
        QProId
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
        quicksiteProjectDidId
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
      quicksiteEnvQProIdId
    }
    nextToken
    startedAt
  }
}
query GetBIMProject($id: ID!) {
  getBIMProject(id: $id) {
    Did
    name
    source
    destination
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListBIMProjects(
  $filter: ModelBIMProjectFilterInput
  $limit: Int
  $nextToken: String
) {
  listBIMProjects(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      Did
      name
      source
      destination
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncBIMProjects(
  $filter: ModelBIMProjectFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncBIMProjects(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      Did
      name
      source
      destination
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDataset($id: ID!) {
  getDataset(id: $id) {
    name
    datasources
    files
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDatasets(
  $filter: ModelDatasetFilterInput
  $limit: Int
  $nextToken: String
) {
  listDatasets(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      datasources
      files
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDatasets(
  $filter: ModelDatasetFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDatasets(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      datasources
      files
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetDatasouce($id: ID!) {
  getDatasouce(id: $id) {
    name
    dsid
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListDatasouces(
  $filter: ModelDatasouceFilterInput
  $limit: Int
  $nextToken: String
) {
  listDatasouces(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      dsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncDatasouces(
  $filter: ModelDatasouceFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncDatasouces(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      dsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetQuicksightFolder($id: ID!) {
  getQuicksightFolder(id: $id) {
    name
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListQuicksightFolders(
  $filter: ModelQuicksightFolderFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksightFolders(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncQuicksightFolders(
  $filter: ModelQuicksightFolderFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksightFolders(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetQuicksightGroup($id: ID!) {
  getQuicksightGroup(id: $id) {
    name
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListQuicksightGroups(
  $filter: ModelQuicksightGroupFilterInput
  $limit: Int
  $nextToken: String
) {
  listQuicksightGroups(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncQuicksightGroups(
  $filter: ModelQuicksightGroupFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncQuicksightGroups(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetFile($id: ID!) {
  getFile(id: $id) {
    name
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListFiles(
  $filter: ModelFileFilterInput
  $limit: Int
  $nextToken: String
) {
  listFiles(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncFiles(
  $filter: ModelFileFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncFiles(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query GetTable($id: ID!) {
  getTable(id: $id) {
    name
    dsid
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
query ListTables(
  $filter: ModelTableFilterInput
  $limit: Int
  $nextToken: String
) {
  listTables(filter: $filter, limit: $limit, nextToken: $nextToken) {
    items {
      name
      dsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
query SyncTables(
  $filter: ModelTableFilterInput
  $limit: Int
  $nextToken: String
  $lastSync: AWSTimestamp
) {
  syncTables(
    filter: $filter
    limit: $limit
    nextToken: $nextToken
    lastSync: $lastSync
  ) {
    items {
      name
      dsid
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    nextToken
    startedAt
  }
}
