# this is an auto generated file. This will be overwritten
mutation CreateTodo(
  $input: CreateTodoInput!
  $condition: ModelTodoConditionInput
) {
  createTodo(input: $input, condition: $condition) {
    id
    name
    description
    city
    createdAt
    updatedAt
  }
}
mutation UpdateTodo(
  $input: UpdateTodoInput!
  $condition: ModelTodoConditionInput
) {
  updateTodo(input: $input, condition: $condition) {
    id
    name
    description
    city
    createdAt
    updatedAt
  }
}
mutation DeleteTodo(
  $input: DeleteTodoInput!
  $condition: ModelTodoConditionInput
) {
  deleteTodo(input: $input, condition: $condition) {
    id
    name
    description
    city
    createdAt
    updatedAt
  }
}
mutation CreateTableaulogin(
  $input: CreateTableauloginInput!
  $condition: ModelTableauloginConditionInput
) {
  createTableaulogin(input: $input, condition: $condition) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
  }
}
mutation UpdateTableaulogin(
  $input: UpdateTableauloginInput!
  $condition: ModelTableauloginConditionInput
) {
  updateTableaulogin(input: $input, condition: $condition) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
  }
}
mutation DeleteTableaulogin(
  $input: DeleteTableauloginInput!
  $condition: ModelTableauloginConditionInput
) {
  deleteTableaulogin(input: $input, condition: $condition) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
  }
}
mutation CreateQuicksightlogin(
  $input: CreateQuicksightloginInput!
  $condition: ModelQuicksightloginConditionInput
) {
  createQuicksightlogin(input: $input, condition: $condition) {
    id
    awsaccountId
    createdAt
    updatedAt
  }
}
mutation UpdateQuicksightlogin(
  $input: UpdateQuicksightloginInput!
  $condition: ModelQuicksightloginConditionInput
) {
  updateQuicksightlogin(input: $input, condition: $condition) {
    id
    awsaccountId
    createdAt
    updatedAt
  }
}
mutation DeleteQuicksightlogin(
  $input: DeleteQuicksightloginInput!
  $condition: ModelQuicksightloginConditionInput
) {
  deleteQuicksightlogin(input: $input, condition: $condition) {
    id
    awsaccountId
    createdAt
    updatedAt
  }
}
mutation CreateCustomer(
  $input: CreateCustomerInput!
  $condition: ModelCustomerConditionInput
) {
  createCustomer(input: $input, condition: $condition) {
    CustomerId
    name
    id
    createdAt
    updatedAt
  }
}
mutation UpdateCustomer(
  $input: UpdateCustomerInput!
  $condition: ModelCustomerConditionInput
) {
  updateCustomer(input: $input, condition: $condition) {
    CustomerId
    name
    id
    createdAt
    updatedAt
  }
}
mutation DeleteCustomer(
  $input: DeleteCustomerInput!
  $condition: ModelCustomerConditionInput
) {
  deleteCustomer(input: $input, condition: $condition) {
    CustomerId
    name
    id
    createdAt
    updatedAt
  }
}
mutation CreateDepartment(
  $input: CreateDepartmentInput!
  $condition: ModelDepartmentConditionInput
) {
  createDepartment(input: $input, condition: $condition) {
    Did
    CustomerId
    Dname
    id
    createdAt
    updatedAt
  }
}
mutation UpdateDepartment(
  $input: UpdateDepartmentInput!
  $condition: ModelDepartmentConditionInput
) {
  updateDepartment(input: $input, condition: $condition) {
    Did
    CustomerId
    Dname
    id
    createdAt
    updatedAt
  }
}
mutation DeleteDepartment(
  $input: DeleteDepartmentInput!
  $condition: ModelDepartmentConditionInput
) {
  deleteDepartment(input: $input, condition: $condition) {
    Did
    CustomerId
    Dname
    id
    createdAt
    updatedAt
  }
}
mutation CreateTableauProject(
  $input: CreateTableauProjectInput!
  $condition: ModelTableauProjectConditionInput
) {
  createTableauProject(input: $input, condition: $condition) {
    TProId
    name
    Did
    id
    createdAt
    updatedAt
  }
}
mutation UpdateTableauProject(
  $input: UpdateTableauProjectInput!
  $condition: ModelTableauProjectConditionInput
) {
  updateTableauProject(input: $input, condition: $condition) {
    TProId
    name
    Did
    id
    createdAt
    updatedAt
  }
}
mutation DeleteTableauProject(
  $input: DeleteTableauProjectInput!
  $condition: ModelTableauProjectConditionInput
) {
  deleteTableauProject(input: $input, condition: $condition) {
    TProId
    name
    Did
    id
    createdAt
    updatedAt
  }
}
mutation CreateTableauWorkbook(
  $input: CreateTableauWorkbookInput!
  $condition: ModelTableauWorkbookConditionInput
) {
  createTableauWorkbook(input: $input, condition: $condition) {
    WbId
    name
    TProId
    id
    createdAt
    updatedAt
  }
}
mutation UpdateTableauWorkbook(
  $input: UpdateTableauWorkbookInput!
  $condition: ModelTableauWorkbookConditionInput
) {
  updateTableauWorkbook(input: $input, condition: $condition) {
    WbId
    name
    TProId
    id
    createdAt
    updatedAt
  }
}
mutation DeleteTableauWorkbook(
  $input: DeleteTableauWorkbookInput!
  $condition: ModelTableauWorkbookConditionInput
) {
  deleteTableauWorkbook(input: $input, condition: $condition) {
    WbId
    name
    TProId
    id
    createdAt
    updatedAt
  }
}
mutation CreateTableauSheet(
  $input: CreateTableauSheetInput!
  $condition: ModelTableauSheetConditionInput
) {
  createTableauSheet(input: $input, condition: $condition) {
    name
    WbId
    Tsid
    id
    createdAt
    updatedAt
  }
}
mutation UpdateTableauSheet(
  $input: UpdateTableauSheetInput!
  $condition: ModelTableauSheetConditionInput
) {
  updateTableauSheet(input: $input, condition: $condition) {
    name
    WbId
    Tsid
    id
    createdAt
    updatedAt
  }
}
mutation DeleteTableauSheet(
  $input: DeleteTableauSheetInput!
  $condition: ModelTableauSheetConditionInput
) {
  deleteTableauSheet(input: $input, condition: $condition) {
    name
    WbId
    Tsid
    id
    createdAt
    updatedAt
  }
}
mutation CreateTableauGraph(
  $input: CreateTableauGraphInput!
  $condition: ModelTableauGraphConditionInput
) {
  createTableauGraph(input: $input, condition: $condition) {
    name
    Tsid
    id
    createdAt
    updatedAt
  }
}
mutation UpdateTableauGraph(
  $input: UpdateTableauGraphInput!
  $condition: ModelTableauGraphConditionInput
) {
  updateTableauGraph(input: $input, condition: $condition) {
    name
    Tsid
    id
    createdAt
    updatedAt
  }
}
mutation DeleteTableauGraph(
  $input: DeleteTableauGraphInput!
  $condition: ModelTableauGraphConditionInput
) {
  deleteTableauGraph(input: $input, condition: $condition) {
    name
    Tsid
    id
    createdAt
    updatedAt
  }
}
mutation CreateTableauEnv(
  $input: CreateTableauEnvInput!
  $condition: ModelTableauEnvConditionInput
) {
  createTableauEnv(input: $input, condition: $condition) {
    name
    TProId
    id
    createdAt
    updatedAt
  }
}
mutation UpdateTableauEnv(
  $input: UpdateTableauEnvInput!
  $condition: ModelTableauEnvConditionInput
) {
  updateTableauEnv(input: $input, condition: $condition) {
    name
    TProId
    id
    createdAt
    updatedAt
  }
}
mutation DeleteTableauEnv(
  $input: DeleteTableauEnvInput!
  $condition: ModelTableauEnvConditionInput
) {
  deleteTableauEnv(input: $input, condition: $condition) {
    name
    TProId
    id
    createdAt
    updatedAt
  }
}
