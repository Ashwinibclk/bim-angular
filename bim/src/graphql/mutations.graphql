# this is an auto generated file. This will be overwritten
mutation CreateTableaulogin(
  $input: CreateTableauloginInput!
  $condition: ModelTableauloginConditionInput
) {
  createTableaulogin(input: $input, condition: $condition) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateTableaulogin(
  $input: UpdateTableauloginInput!
  $condition: ModelTableauloginConditionInput
) {
  updateTableaulogin(input: $input, condition: $condition) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteTableaulogin(
  $input: DeleteTableauloginInput!
  $condition: ModelTableauloginConditionInput
) {
  deleteTableaulogin(input: $input, condition: $condition) {
    id
    username
    password
    sitename
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateQuicksightlogin(
  $input: CreateQuicksightloginInput!
  $condition: ModelQuicksightloginConditionInput
) {
  createQuicksightlogin(input: $input, condition: $condition) {
    id
    awsaccountId
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateQuicksightlogin(
  $input: UpdateQuicksightloginInput!
  $condition: ModelQuicksightloginConditionInput
) {
  updateQuicksightlogin(input: $input, condition: $condition) {
    id
    awsaccountId
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteQuicksightlogin(
  $input: DeleteQuicksightloginInput!
  $condition: ModelQuicksightloginConditionInput
) {
  deleteQuicksightlogin(input: $input, condition: $condition) {
    id
    awsaccountId
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateCustomer(
  $input: CreateCustomerInput!
  $condition: ModelCustomerConditionInput
) {
  createCustomer(input: $input, condition: $condition) {
    id
    name
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateCustomer(
  $input: UpdateCustomerInput!
  $condition: ModelCustomerConditionInput
) {
  updateCustomer(input: $input, condition: $condition) {
    id
    name
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteCustomer(
  $input: DeleteCustomerInput!
  $condition: ModelCustomerConditionInput
) {
  deleteCustomer(input: $input, condition: $condition) {
    id
    name
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateDepartment(
  $input: CreateDepartmentInput!
  $condition: ModelDepartmentConditionInput
) {
  createDepartment(input: $input, condition: $condition) {
    id
    DName
    customers {
      items {
        id
        name
        Did
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateDepartment(
  $input: UpdateDepartmentInput!
  $condition: ModelDepartmentConditionInput
) {
  updateDepartment(input: $input, condition: $condition) {
    id
    DName
    customers {
      items {
        id
        name
        Did
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteDepartment(
  $input: DeleteDepartmentInput!
  $condition: ModelDepartmentConditionInput
) {
  deleteDepartment(input: $input, condition: $condition) {
    id
    DName
    customers {
      items {
        id
        name
        Did
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateBIMProject(
  $input: CreateBIMProjectInput!
  $condition: ModelBIMProjectConditionInput
) {
  createBIMProject(input: $input, condition: $condition) {
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    migrationid
    name
    source
    destination
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateBIMProject(
  $input: UpdateBIMProjectInput!
  $condition: ModelBIMProjectConditionInput
) {
  updateBIMProject(input: $input, condition: $condition) {
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    migrationid
    name
    source
    destination
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteBIMProject(
  $input: DeleteBIMProjectInput!
  $condition: ModelBIMProjectConditionInput
) {
  deleteBIMProject(input: $input, condition: $condition) {
    Did
    department {
      id
      DName
      customers {
        nextToken
        startedAt
      }
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    migrationid
    name
    source
    destination
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateDataset(
  $input: CreateDatasetInput!
  $condition: ModelDatasetConditionInput
) {
  createDataset(input: $input, condition: $condition) {
    datasetid
    name
    datasources {
      items {
        dsid
        name
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
    }
    Files {
      items {
        name
        url
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateDataset(
  $input: UpdateDatasetInput!
  $condition: ModelDatasetConditionInput
) {
  updateDataset(input: $input, condition: $condition) {
    datasetid
    name
    datasources {
      items {
        dsid
        name
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
    }
    Files {
      items {
        name
        url
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteDataset(
  $input: DeleteDatasetInput!
  $condition: ModelDatasetConditionInput
) {
  deleteDataset(input: $input, condition: $condition) {
    datasetid
    name
    datasources {
      items {
        dsid
        name
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
    }
    Files {
      items {
        name
        url
        datasetid
        id
        createdAt
        updatedAt
        _version
        _deleted
        _lastChangedAt
      }
      nextToken
      startedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateFile(
  $input: CreateFileInput!
  $condition: ModelFileConditionInput
) {
  createFile(input: $input, condition: $condition) {
    name
    url
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateFile(
  $input: UpdateFileInput!
  $condition: ModelFileConditionInput
) {
  updateFile(input: $input, condition: $condition) {
    name
    url
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteFile(
  $input: DeleteFileInput!
  $condition: ModelFileConditionInput
) {
  deleteFile(input: $input, condition: $condition) {
    name
    url
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation CreateDatasources(
  $input: CreateDatasourcesInput!
  $condition: ModelDatasourcesConditionInput
) {
  createDatasources(input: $input, condition: $condition) {
    dsid
    name
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation UpdateDatasources(
  $input: UpdateDatasourcesInput!
  $condition: ModelDatasourcesConditionInput
) {
  updateDatasources(input: $input, condition: $condition) {
    dsid
    name
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
mutation DeleteDatasources(
  $input: DeleteDatasourcesInput!
  $condition: ModelDatasourcesConditionInput
) {
  deleteDatasources(input: $input, condition: $condition) {
    dsid
    name
    datasetid
    datasets {
      datasetid
      name
      datasources {
        nextToken
      }
      Files {
        nextToken
        startedAt
      }
      id
      createdAt
      updatedAt
      _version
      _deleted
      _lastChangedAt
    }
    id
    createdAt
    updatedAt
    _version
    _deleted
    _lastChangedAt
  }
}
